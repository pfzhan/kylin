--
-- Copyright (C) 2020 Kyligence Inc. All rights reserved.
--
-- http://kyligence.io
--
-- This software is the confidential and proprietary information of
-- Kyligence Inc. ("Confidential Information"). You shall not disclose
-- such Confidential Information and shall use it only in accordance
-- with the terms of the license agreement you entered into with
-- Kyligence Inc.
--
-- THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
-- "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-- LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
-- A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
-- OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
-- SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
-- LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-- DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-- THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-- (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
-- OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
--
SELECT (CASE WHEN ("Z_PROVDASH_UM_ED"."COPD" = 1)
THEN 'Yes' ELSE 'No ' END) AS "COPD__copy_",
(CASE WHEN ("Z_PROVDASH_UM_ED"."STROKE" = 1) 
THEN 'Yes' ELSE 'No ' END) AS "Calculation_540713452419612672",
(CASE WHEN ("Z_PROVDASH_UM_ED"."DIABETES" = 1) THEN 'Yes' ELSE 'No ' END) AS "Calculation_540713452420141057",
{fn CONCAT({fn CONCAT("Z_PROVDASH_UM_ED"."PAYER", ' ')}, "Z_PROVDASH_UM_ED"."LOB")} AS "Calculation_886083264414601216",   
(CASE WHEN ("Z_PROVDASH_UM_ED"."AMI" = 1) THEN 'Yes' ELSE 'No ' END) AS "Hx_of_CHF__copy_",
(CASE WHEN ("Z_PROVDASH_UM_ED"."VASCULAR_DISEASE" = 1) THEN 'Yes' ELSE 'No ' END) AS "Hx_of_Diabetes__copy_",
(CASE WHEN ("Z_PROVDASH_UM_ED"."CHF" = 1) THEN 'Yes' ELSE 'No ' END) AS "Hx_of_Stroke__copy_",
"Z_PROVDASH_UM_ED"."MARA_MEDICARE_RISK_SCORE" AS "MARA_MEDICARE_RISK_SCORE__copy_",   
"Z_PROVDASH_UM_ED"."MEMBER_ID" AS "MEMBER_ID",   
"Z_PROVDASH_UM_ED"."MEMBER_NAME" AS "MEMBER_NAME",   
"Z_PROVDASH_UM_ED"."PHONE" AS "PHONE",   
"Z_PROVDASH_UM_ED"."STATE" AS "STATE",   
"Z_PROVDASH_UM_ED"."ZIP" AS "ZIP",   
MIN("Z_PROVDASH_UM_ED"."MARA_MEDICARE_RISK_SCORE") AS "max_MARA_MEDICARE_RISK_SCORE__copy__ok",   
MIN("Z_PROVDASH_UM_ED"."MARA_MEDICARE_RISK_SCORE") AS "max_MARA_MEDICARE_RISK_SCORE_ok",   
((({fn YEAR("Z_PROVDASH_UM_ED"."DOB")} * 10000) + ({fn MONTH("Z_PROVDASH_UM_ED"."DOB")} * 100)) + {fn DAYOFMONTH("Z_PROVDASH_UM_ED"."DOB")}) AS "md_DOB_ok" 
FROM "POPHEALTH_ANALYTICS"."Z_PROVDASH_UM_ED" "Z_PROVDASH_UM_ED" 
WHERE ("Z_PROVDASH_UM_ED"."FULL_NAME" = 'JONATHAN AREND') 
GROUP BY (CASE WHEN ("Z_PROVDASH_UM_ED"."COPD" = 1) THEN 'Yes' ELSE 'No ' END),
(CASE WHEN ("Z_PROVDASH_UM_ED"."STROKE" = 1) THEN 'Yes' ELSE 'No ' END),
(CASE WHEN ("Z_PROVDASH_UM_ED"."DIABETES" = 1) THEN 'Yes' ELSE 'No ' END),
{fn CONCAT({fn CONCAT("Z_PROVDASH_UM_ED"."PAYER", ' ')}, "Z_PROVDASH_UM_ED"."LOB")},   
(CASE WHEN ("Z_PROVDASH_UM_ED"."AMI" = 1) THEN 'Yes' ELSE 'No ' END),
(CASE WHEN ("Z_PROVDASH_UM_ED"."VASCULAR_DISEASE" = 1) THEN 'Yes' ELSE 'No ' END),
(CASE WHEN ("Z_PROVDASH_UM_ED"."CHF" = 1) THEN 'Yes' ELSE 'No ' END),
"Z_PROVDASH_UM_ED"."MARA_MEDICARE_RISK_SCORE",  
 "Z_PROVDASH_UM_ED"."MEMBER_ID",   
 "Z_PROVDASH_UM_ED"."MEMBER_NAME",   
 "Z_PROVDASH_UM_ED"."PHONE",   
 "Z_PROVDASH_UM_ED"."STATE",   "Z_PROVDASH_UM_ED"."ZIP",   
 ((({fn YEAR("Z_PROVDASH_UM_ED"."DOB")} * 10000) + ({fn MONTH("Z_PROVDASH_UM_ED"."DOB")} * 100)) + {fn DAYOFMONTH("Z_PROVDASH_UM_ED"."DOB")});