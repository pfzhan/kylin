--
-- Copyright (C) 2020 Kyligence Inc. All rights reserved.
--
-- http://kyligence.io
--
-- This software is the confidential and proprietary information of
-- Kyligence Inc. ("Confidential Information"). You shall not disclose
-- such Confidential Information and shall use it only in accordance
-- with the terms of the license agreement you entered into with
-- Kyligence Inc.
--
-- THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
-- "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-- LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
-- A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
-- OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
-- SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
-- LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-- DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-- THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-- (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
-- OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
--
SELECT {fn FLOOR(((CASE WHEN ({fn MONTH({fn CURRENT_DATE()})} > {fn MONTH("Z_PROVDASH_UM_ED"."DOB")})
THEN {fn TIMESTAMPDIFF(SQL_TSI_YEAR,"Z_PROVDASH_UM_ED"."DOB",{fn CURRENT_DATE()})} 
WHEN ({fn MONTH({fn CURRENT_DATE()})} < {fn MONTH("Z_PROVDASH_UM_ED"."DOB")}) 
THEN ({fn TIMESTAMPDIFF(SQL_TSI_YEAR,"Z_PROVDASH_UM_ED"."DOB",{fn CURRENT_DATE()})} - 1) 
WHEN (({fn MONTH({fn CURRENT_DATE()})} = {fn MONTH("Z_PROVDASH_UM_ED"."DOB")}) 
AND ({fn DAYOFMONTH({fn CURRENT_DATE()})} > {fn DAYOFMONTH("Z_PROVDASH_UM_ED"."DOB")})) 
THEN {fn TIMESTAMPDIFF(SQL_TSI_YEAR,"Z_PROVDASH_UM_ED"."DOB",{fn CURRENT_DATE()})} 
ELSE ({fn TIMESTAMPDIFF(SQL_TSI_YEAR,"Z_PROVDASH_UM_ED"."DOB",{fn CURRENT_DATE()})} - 1) 
END) + 5) / 5)} AS "Age__5__bin_",   
{fn FLOOR((CASE WHEN ({fn MONTH({fn CURRENT_DATE()})} > {fn MONTH("Z_PROVDASH_UM_ED"."DOB")}) 
THEN {fn TIMESTAMPDIFF(SQL_TSI_YEAR,"Z_PROVDASH_UM_ED"."DOB",{fn CURRENT_DATE()})} 
WHEN ({fn MONTH({fn CURRENT_DATE()})} < {fn MONTH("Z_PROVDASH_UM_ED"."DOB")}) 
THEN ({fn TIMESTAMPDIFF(SQL_TSI_YEAR,"Z_PROVDASH_UM_ED"."DOB",{fn CURRENT_DATE()})} - 1) 
WHEN (({fn MONTH({fn CURRENT_DATE()})} = {fn MONTH("Z_PROVDASH_UM_ED"."DOB")}) 
AND ({fn DAYOFMONTH({fn CURRENT_DATE()})} > {fn DAYOFMONTH("Z_PROVDASH_UM_ED"."DOB")})) 
THEN {fn TIMESTAMPDIFF(SQL_TSI_YEAR,"Z_PROVDASH_UM_ED"."DOB",{fn CURRENT_DATE()})} 
ELSE ({fn TIMESTAMPDIFF(SQL_TSI_YEAR,"Z_PROVDASH_UM_ED"."DOB",{fn CURRENT_DATE()})} - 1) END) / 5)} AS "Age__bin_",   
AVG({fn CONVERT((CASE WHEN ({fn MONTH({fn CURRENT_DATE()})} > {fn MONTH("Z_PROVDASH_UM_ED"."DOB")}) 
THEN {fn TIMESTAMPDIFF(SQL_TSI_YEAR,"Z_PROVDASH_UM_ED"."DOB",{fn CURRENT_DATE()})} 
WHEN ({fn MONTH({fn CURRENT_DATE()})} < {fn MONTH("Z_PROVDASH_UM_ED"."DOB")}) 
THEN ({fn TIMESTAMPDIFF(SQL_TSI_YEAR,"Z_PROVDASH_UM_ED"."DOB",{fn CURRENT_DATE()})} - 1) 
WHEN (({fn MONTH({fn CURRENT_DATE()})} = {fn MONTH("Z_PROVDASH_UM_ED"."DOB")}) 
AND ({fn DAYOFMONTH({fn CURRENT_DATE()})} > {fn DAYOFMONTH("Z_PROVDASH_UM_ED"."DOB")})) 
THEN {fn TIMESTAMPDIFF(SQL_TSI_YEAR,"Z_PROVDASH_UM_ED"."DOB",{fn CURRENT_DATE()})} 
ELSE ({fn TIMESTAMPDIFF(SQL_TSI_YEAR,"Z_PROVDASH_UM_ED"."DOB",{fn CURRENT_DATE()})} - 1) 
END), SQL_DOUBLE)}) AS "avg_Calculation_61643039908483074_ok",   
COUNT(DISTINCT "Z_PROVDASH_UM_ED"."MEMBER_ID") AS "ctd_MEMBER_ID_ok" 
FROM "POPHEALTH_ANALYTICS"."Z_PROVDASH_UM_ED" "Z_PROVDASH_UM_ED" 
WHERE ("Z_PROVDASH_UM_ED"."FULL_NAME" = 'JONATHAN AREND') 
GROUP BY {fn FLOOR((CASE WHEN ({fn MONTH({fn CURRENT_DATE()})} > {fn MONTH("Z_PROVDASH_UM_ED"."DOB")}) 
THEN {fn TIMESTAMPDIFF(SQL_TSI_YEAR,"Z_PROVDASH_UM_ED"."DOB",{fn CURRENT_DATE()})} 
WHEN ({fn MONTH({fn CURRENT_DATE()})} < {fn MONTH("Z_PROVDASH_UM_ED"."DOB")}) 
THEN ({fn TIMESTAMPDIFF(SQL_TSI_YEAR,"Z_PROVDASH_UM_ED"."DOB",{fn CURRENT_DATE()})} - 1) 
WHEN (({fn MONTH({fn CURRENT_DATE()})} = {fn MONTH("Z_PROVDASH_UM_ED"."DOB")}) 
AND ({fn DAYOFMONTH({fn CURRENT_DATE()})} > {fn DAYOFMONTH("Z_PROVDASH_UM_ED"."DOB")})) 
THEN {fn TIMESTAMPDIFF(SQL_TSI_YEAR,"Z_PROVDASH_UM_ED"."DOB",{fn CURRENT_DATE()})} 
ELSE ({fn TIMESTAMPDIFF(SQL_TSI_YEAR,"Z_PROVDASH_UM_ED"."DOB",{fn CURRENT_DATE()})} - 1) END) / 5)},   
{fn FLOOR(((CASE WHEN ({fn MONTH({fn CURRENT_DATE()})} > {fn MONTH("Z_PROVDASH_UM_ED"."DOB")}) 
THEN {fn TIMESTAMPDIFF(SQL_TSI_YEAR,"Z_PROVDASH_UM_ED"."DOB",{fn CURRENT_DATE()})} 
WHEN ({fn MONTH({fn CURRENT_DATE()})} < {fn MONTH("Z_PROVDASH_UM_ED"."DOB")}) 
THEN ({fn TIMESTAMPDIFF(SQL_TSI_YEAR,"Z_PROVDASH_UM_ED"."DOB",{fn CURRENT_DATE()})} - 1) 
WHEN (({fn MONTH({fn CURRENT_DATE()})} = {fn MONTH("Z_PROVDASH_UM_ED"."DOB")}) 
AND ({fn DAYOFMONTH({fn CURRENT_DATE()})} > {fn DAYOFMONTH("Z_PROVDASH_UM_ED"."DOB")})) 
THEN {fn TIMESTAMPDIFF(SQL_TSI_YEAR,"Z_PROVDASH_UM_ED"."DOB",{fn CURRENT_DATE()})} 
ELSE ({fn TIMESTAMPDIFF(SQL_TSI_YEAR,"Z_PROVDASH_UM_ED"."DOB",{fn CURRENT_DATE()})} - 1) END) + 5) / 5)};