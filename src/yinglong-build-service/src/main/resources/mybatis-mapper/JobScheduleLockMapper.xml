<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.kyligence.kap.job.mapper.JobScheduleLockMapper">
  <resultMap id="BaseResultMap" type="io.kyligence.kap.job.domain.JobScheduleLock">
    <id column="lock_id" jdbcType="VARCHAR" property="lockId" />
    <result column="lock_instance" jdbcType="VARCHAR" property="lockInstance" />
    <result column="lock_expire_time" jdbcType="TIMESTAMP" property="lockExpireTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    lock_id, lock_instance, lock_expire_time, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from job_schedule_lock
    where lock_id = #{lockId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from job_schedule_lock
    where lock_id = #{lockId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="io.kyligence.kap.job.domain.JobScheduleLock">
    insert into job_schedule_lock (lock_id, lock_instance, lock_expire_time, 
      create_time, update_time)
    values (#{lockId,jdbcType=VARCHAR}, #{lockInstance,jdbcType=VARCHAR}, #{lockExpireTime,jdbcType=TIMESTAMP}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="io.kyligence.kap.job.domain.JobScheduleLock">
    insert into job_schedule_lock
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="lockId != null">
        lock_id,
      </if>
      <if test="lockInstance != null">
        lock_instance,
      </if>
      <if test="lockExpireTime != null">
        lock_expire_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="lockId != null">
        #{lockId,jdbcType=VARCHAR},
      </if>
      <if test="lockInstance != null">
        #{lockInstance,jdbcType=VARCHAR},
      </if>
      <if test="lockExpireTime != null">
        #{lockExpireTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="io.kyligence.kap.job.domain.JobScheduleLock">
    update job_schedule_lock
    <set>
      <if test="lockInstance != null">
        lock_instance = #{lockInstance,jdbcType=VARCHAR},
      </if>
      <if test="lockExpireTime != null">
        lock_expire_time = #{lockExpireTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where lock_id = #{lockId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="io.kyligence.kap.job.domain.JobScheduleLock">
    update job_schedule_lock
    set lock_instance = #{lockInstance,jdbcType=VARCHAR},
      lock_expire_time = #{lockExpireTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where lock_id = #{lockId,jdbcType=VARCHAR}
  </update>
</mapper>