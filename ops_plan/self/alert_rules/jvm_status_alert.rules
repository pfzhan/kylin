groups:
- name: jvm_status_alert
  rules:

  - alert: JVM Heap Usage Too High
    expr: sum by(job,instance) (jvm_memory_used_bytes{area="heap"}) / sum by(job,instance) (jvm_memory_max_bytes{area="heap"}) * 100 > 80
          and (sum by(job,instance) (jvm_memory_max_bytes{area="heap"}) - sum by(job,instance) (jvm_memory_used_bytes{area="heap"}) ) / 1073741824 < 2
    for: 2m
    labels:
      severity: critical
    annotations:
      summary: "{{$labels.job}} Instance {{ $labels.instance }} jvm heap usage too high"
      description: "{{$labels.job}} Instance {{ $labels.instance }} jvm heap usage has been > 80% for over 2 minutes and jvm heap available memory < 2GB, current usage: {{ humanize $value }}% "

  - alert: JVM GC Pause Time Too Long
    expr: sum by (job,instance) (increase(jvm_gc_pause_seconds_sum[5m])) > 5 * 60 * 0.1
    for: 1m
    labels:
      severity: critical
    annotations:
      summary: "{{$labels.job}} Instance {{ $labels.instance }} jvm gc pause time too long"
      description: "{{$labels.job}} Instance {{ $labels.instance }} jvm gc pause time ratio > 10% in last 5 minutes"

  - alert: Process Cpu Usage Too High
    expr: process_cpu_usage > 0.8
    for: 2m
    labels:
      severity: critical
    annotations:
      summary: "{{$labels.job}} Instance {{ $labels.instance }} process cpu usage too high"
      description: "{{$labels.job}} Instance {{ $labels.instance }} process cpu usage has been > 80% for over 2 minutes, current usage: {{ humanize $value }}"

  - alert: JVM Current Threads Too High
    expr: sum by(job,instance) (jvm_threads_states_threads) > 2000
    for: 5m
    labels:
      severity: signification
    annotations:
      summary: "{{$labels.job}} Instance {{ $labels.instance }} jvm current threads too high"
      description: "{{$labels.job}} Instance {{ $labels.instance }} jvm current threads has been > 2000 for over 5 minutes, current threads: {{ humanize $value }}"